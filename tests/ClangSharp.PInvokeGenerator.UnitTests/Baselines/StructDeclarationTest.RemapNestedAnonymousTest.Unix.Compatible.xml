<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="ClangSharp.Test">
    <struct name="MyStruct" access="public" unsafe="true">
      <field name="r" access="public">
        <type>double</type>
      </field>
      <field name="g" access="public">
        <type>double</type>
      </field>
      <field name="b" access="public">
        <type>double</type>
      </field>
      <field name="Anonymous" access="public">
        <type native="__AnonymousRecord_ClangUnsavedFile_L7_C5">_Anonymous_e__Struct</type>
      </field>
      <field name="a" access="public">
        <type>ref double</type>
        <get>
          <code>fixed (_Anonymous_e__Struct* pField = &amp;Anonymous)
    {
        return ref pField-&gt;a;
    }</code>
        </get>
      </field>
      <struct name="_Anonymous_e__Struct" access="public">
        <field name="a" access="public">
          <type>double</type>
        </field>
      </struct>
    </struct>
  </namespace>
</bindings>
