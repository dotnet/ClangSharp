<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="ClangSharp.Test">
    <struct name="MyUnion" access="public" layout="Explicit">
      <field name="value" access="public" offset="0">
        <type>double</type>
      </field>
    </struct>
    <struct name="MyOtherUnion" access="public" layout="Explicit">
      <field name="c" access="public" offset="0">
        <type native="MyUnion[2][1][3][4]" count="2 * 1 * 3 * 4" fixed="_c_e__FixedBuffer">MyUnion</type>
      </field>
      <struct name="_c_e__FixedBuffer" access="public">
        <field name="e0_0_0_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_0_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_1_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_1_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_2_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_2_0" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_0_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_0_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_1_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_1_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_2_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_2_1" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_0_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_0_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_1_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_1_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_2_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_2_2" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_0_3" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_0_3" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_1_3" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_1_3" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e0_0_2_3" access="public">
          <type>MyUnion</type>
        </field>
        <field name="e1_0_2_3" access="public">
          <type>MyUnion</type>
        </field>
        <indexer access="public">
          <type>ref MyUnion</type>
          <param name="index">
            <type>int</type>
          </param>
          <get>
            <code>return ref AsSpan()[index];</code>
          </get>
        </indexer>
        <function name="AsSpan" access="public">
          <type>Span&lt;MyUnion&gt;</type>
          <code>MemoryMarshal.CreateSpan(ref e0_0_0_0, 24);</code>
        </function>
      </struct>
    </struct>
  </namespace>
</bindings>
