<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="ClangSharp.Test">
    <struct name="MyStruct" access="public" vtbl="true" unsafe="true">
      <field name="lpVtbl" access="public">
        <type>Vtbl*</type>
      </field>
      <delegate name="_GetType" access="public" convention="ThisCall">
        <type>int</type>
        <param name="pThis">
          <type>MyStruct*</type>
        </param>
        <param name="objA">
          <type>int</type>
        </param>
        <param name="objB">
          <type>int</type>
        </param>
      </delegate>
      <delegate name="_GetType1" access="public" convention="ThisCall">
        <type>int</type>
        <param name="pThis">
          <type>MyStruct*</type>
        </param>
      </delegate>
      <delegate name="_GetType2" access="public" convention="ThisCall">
        <type>int</type>
        <param name="pThis">
          <type>MyStruct*</type>
        </param>
        <param name="obj">
          <type>int</type>
        </param>
      </delegate>
      <function name="GetType" access="public" unsafe="true">
        <type>int</type>
        <param name="objA">
          <type>int</type>
        </param>
        <param name="objB">
          <type>int</type>
        </param>
        <body>
          <code>fixed (MyStruct* pThis = &amp;this)
    {
        return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_GetType</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">GetType</vtbl>)(<param special="thisPtr">pThis</param>, <param name="objA">objA</param>, <param name="objB">objB</param>);
    }</code>
        </body>
      </function>
      <function name="GetType" access="public" unsafe="true">
        <type>int</type>
        <body>
          <code>fixed (MyStruct* pThis = &amp;this)
    {
        return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_GetType1</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">GetType1</vtbl>)(<param special="thisPtr">pThis</param>);
    }</code>
        </body>
      </function>
      <function name="GetType" access="public" unsafe="true">
        <type>int</type>
        <param name="obj">
          <type>int</type>
        </param>
        <body>
          <code>fixed (MyStruct* pThis = &amp;this)
    {
        return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_GetType2</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">GetType2</vtbl>)(<param special="thisPtr">pThis</param>, <param name="obj">obj</param>);
    }</code>
        </body>
      </function>
      <interface>
        <function name="GetType" access="public" unsafe="true">
          <type>int</type>
          <param name="objA">
            <type>int</type>
          </param>
          <param name="objB">
            <type>int</type>
          </param>
        </function>
        <function name="GetType" access="public" unsafe="true">
          <type>int</type>
        </function>
        <function name="GetType" access="public" unsafe="true">
          <type>int</type>
          <param name="obj">
            <type>int</type>
          </param>
        </function>
      </interface>
      <vtbl>
        <field name="GetType" access="public">
          <type native="int (int, int)">IntPtr</type>
        </field>
        <field name="GetType1" access="public">
          <type native="int ()">IntPtr</type>
        </field>
        <field name="GetType2" access="public">
          <type native="int (int)">IntPtr</type>
        </field>
      </vtbl>
    </struct>
  </namespace>
</bindings>
