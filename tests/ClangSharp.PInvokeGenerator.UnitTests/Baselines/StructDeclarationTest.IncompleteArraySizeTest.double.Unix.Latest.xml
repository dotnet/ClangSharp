<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="ClangSharp.Test">
    <struct name="MyStruct" access="public">
      <field name="x" access="public">
        <type native="double[]" count="1" fixed="_x_e__FixedBuffer">double</type>
      </field>
      <struct name="_x_e__FixedBuffer" access="public">
        <field name="e0" access="public">
          <type>double</type>
        </field>
        <indexer access="public">
          <type>ref double</type>
          <param name="index">
            <type>int</type>
          </param>
          <get>
            <code>return ref Unsafe.Add(ref e0, index);</code>
          </get>
        </indexer>
        <function name="AsSpan" access="public">
          <type>Span&lt;double&gt;</type>
          <param name="length">
            <type>int</type>
          </param>
          <code>MemoryMarshal.CreateSpan(ref e0, length);</code>
        </function>
      </struct>
    </struct>
  </namespace>
</bindings>
