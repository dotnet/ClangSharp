<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <PackageReference Include="System.CommandLine.Experimental" Version="0.2.0-alpha.19174.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ClangSharp\ClangSharp.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
  </PropertyGroup>

  <!-- libclang name, unlikely to need overriding -->
  <PropertyGroup Condition="'$(LibClangName)' == ''">
    <LibClangName>libclang</LibClangName>
  </PropertyGroup>

  <!-- Auto-detect LLVM... more or less -->
  <PropertyGroup Condition="'$(LLVMIncludePath)' == ''">
    <LLVMIncludePath Condition="'$(OS)' == 'Windows_NT'">C:\Program Files\LLVM\include</LLVMIncludePath>
    <LLVMIncludePath Condition="'$(OS)' != 'Windows_NT'">/usr/lib/llvm-6.0/include</LLVMIncludePath>
  </PropertyGroup>

  <Target Name="GenerateClangSharp">
    <Exec Command="dotnet run --m clang --p clang_ --namespace ClangSharp --output ../ClangSharp/Generated.cs --libraryPath $(LibClangName) --include $(LLVMIncludePath) --file $(LLVMIncludePath)/clang-c/Index.h --file $(LLVMIncludePath)/clang-c/CXString.h --file $(LLVMIncludePath)/clang-c/Documentation.h --file $(LLVMIncludePath)/clang-c/CXErrorCode.h --file $(LLVMIncludePath)/clang-c/BuildSystem.h --file $(LLVMIncludePath)/clang-c/CXCompilationDatabase.h --e clang_index_getClientEntity --e clang_index_setClientEntity --e clang_createTranslationUnitFromSourceFile --e clang_parseTranslationUnit --e clang_parseTranslationUnit2 --e clang_parseTranslationUnit2FullArgv --e clang_reparseTranslationUnit --e clang_codeCompleteAt --e clang_indexSourceFile --e clang_indexSourceFileFullArgv --e clang_disposeSourceRangeList --e clang_annotateTokens --e clang_annotateTokens --e clang_disposeTokens --e clang_tokenize --e clang_disposeStringSet --e clang_getCompletionParent --e clang_disposeCXPlatformAvailability --e clang_getCursorPlatformAvailability" />
  </Target>

</Project>
